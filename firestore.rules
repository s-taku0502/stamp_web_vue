rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows authenticated users to read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /organizations/{organizationId} {
      allow read, write: if request.auth != null && (isCreator() || isMember(organizationId));
      
      match /members/{memberId} {
        allow read, write: if request.auth != null && (isCreator() || isAdmin(organizationId));
      }
    }
    
    match /contacts/{contactId} {
      allow read, write: if request.auth != null && (isCreator() || isAdmin());
    }
  }
  
  function isCreator() {
    return get(/databases/$(database)/documents/organizations/app_creator).data.role == "creator";
  }
  
  function isMember(organizationId) {
    return exists(/databases/$(database)/documents/organizations/$(organizationId)/members/$(request.auth.uid));
  }
  
  function isAdmin() {
    return get(/databases/$(database)/documents/organizations/app_creator/members/$(request.auth.uid)).data.role == "admin";
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid != null;
    }
  }
}
